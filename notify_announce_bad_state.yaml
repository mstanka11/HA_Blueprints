blueprint:
  name: Notify/Announce on Bad State (Script)
  description: >
    Re-usable script to create notifications and/or TTS announcements when a
    specified entity is in an undesired (“bad”) state. Intended to be called
    from your own automations (e.g., person leaves a zone and a door lock is unlocked).
  domain: script
  author: m365-copilot
  source_url: https://github.com/youruser/yourrepo/blob/main/blueprints/script/m365/notify_announce_bad_state.yaml

  input:
    check_entity:
      name: Entity to check
      description: Entity that should not be in the "bad" state (e.g., a lock).
      selector:
        entity: {}

    desired_bad_state:
      name: Bad state (exact)
      description: >
        Exact state that should be considered "bad". Leave blank to auto-infer:
        lock → unlocked, binary_sensor → on, cover → open, otherwise → on.
      default: ""
      selector:
        text: {}

    grace_seconds:
      name: Grace period (seconds)
      description: Wait this many seconds, then re-check before notifying.
      default: 0
      selector:
        number:
          min: 0
          max: 600
          unit_of_measurement: s
          mode: box

    # --- MESSAGE / TITLES ---
    title_text:
      name: Notification title
      default: "Home Alert"
      selector:
        text: {}

    message_prefix:
      name: Message prefix (optional)
      description: Optional sentence to prepend before the auto-built message.
      default: ""
      selector:
        text: {}

    message_suffix:
      name: Message suffix (optional)
      description: Optional sentence to append after the auto-built message.
      default: ""
      selector:
        text: {}

    # --- PERSISTENT NOTIFICATION ---
    use_persistent_notification:
      name: Create persistent notification
      default: true
      selector:
        boolean: {}

    # --- PUSH (MOBILE APP) ---
    use_push_notification:
      name: Send push notification to phones (mobile_app)
      default: false
      selector:
        boolean: {}

    mobile_targets:
      name: Push targets (devices)
      description: Choose phones/tablets registered with the Mobile App.
      default: []
      selector:
        device:
          multiple: true
          filter:
            integration: mobile_app

    push_channel:
      name: Push channel (Android) / category (iOS)
      default: "Home"
      selector:
        text: {}

    push_critical:
      name: Critical alert (iOS) / High priority (Android)
      default: true
      selector:
        boolean: {}

    # --- TTS ANNOUNCEMENT ---
    use_tts:
      name: Make a TTS announcement
      default: true
      selector:
        boolean: {}

    tts_entity:
      name: TTS engine (Wyoming → Azure)
      description: Your tts entity (e.g., tts.wyoming_microsoft_tts).
      default: null
      selector:
        entity:
          domain: tts

    media_players:
      name: Speakers / Displays
      description: One or more media_player entities (e.g., Nest Hub, Sonos).
      default: []
      selector:
        entity:
          domain: media_player
          multiple: true

    voice_short_name:
      name: Azure voice short name (exact)
      description: e.g., en-US-SaraNeural (defaults to Sara if left blank)
      default: "en-US-SaraNeural"
      selector:
        text: {}

    tts_cache:
      name: Cache TTS audio
      default: true
      selector:
        boolean: {}

# ------------ SCRIPT SEQUENCE ------------
sequence:
  # 0) Bind inputs to variables (no Jinja in !input bindings)
  - variables:
      check_entity_id: !input check_entity
      desired_bad_state_raw: !input desired_bad_state
      grace_sec: !input grace_seconds

      title_text_raw: !input title_text
      msg_prefix_raw: !input message_prefix
      msg_suffix_raw: !input message_suffix

      use_persist_flag: !input use_persistent_notification
      use_push_flag: !input use_push_notification
      mobile_targets_list: !input mobile_targets
      push_channel_raw: !input push_channel
      push_critical_flag: !input push_critical

      use_tts_flag: !input use_tts
      tts_entity_id: !input tts_entity
      media_players_list: !input media_players
      voice_raw: !input voice_short_name
      tts_cache_flag: !input tts_cache

  # 1) Compute effective "bad" state and friendly names
  - variables:
      check_domain: "{{ check_entity_id.split('.')[0] }}"
      bad_state: >-
        {% set v = desired_bad_state_raw | trim %}
        {% if v %}
          {{ v }}
        {% elif check_domain == 'lock' %}
          unlocked
        {% elif check_domain == 'binary_sensor' %}
          on
        {% elif check_domain == 'cover' %}
          open
        {% else %}
          on
        {% endif %}
      check_name: "{{ state_attr(check_entity_id, 'friendly_name') or check_entity_id }}"
      state_now: "{{ states(check_entity_id) }}"
      title_text: "{{ title_text_raw | trim if title_text_raw is string else 'Home Alert' }}"
      msg_prefix: "{{ (msg_prefix_raw | trim ~ ' ') if msg_prefix_raw is string and msg_prefix_raw|trim else '' }}"
      msg_suffix: "{{ (' ' ~ msg_suffix_raw | trim) if msg_suffix_raw is string and msg_suffix_raw|trim else '' }}"
      voice_name: >-
        {% set v = voice_raw | trim %}
        {{ v if v else 'en-US-SaraNeural' }}

  # 2) Optional grace delay then re-check
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ grace_sec|int > 0 }}"
        sequence:
          - delay:
              seconds: "{{ grace_sec|int }}"
          - variables:
              state_now: "{{ states(check_entity_id) }}"
    default: []

  # 3) If entity is NOT in bad state, stop silently
  - if:
      - condition: template
        value_template: "{{ state_now != bad_state }}"
    then:
      - stop: "Entity not in bad state; nothing to do."

  # 4) Build human-readable message safely (no .append)
  - variables:
      pretty_state: "{{ (state_now | replace('_',' ')) }}"
      auto_message: >-
        {% set _m = "" %}
        {% set _m = _m ~ check_name ~ " is " ~ pretty_state ~ "." %}
        {{ _m | trim }}
      final_message: "{{ (msg_prefix ~ auto_message ~ msg_suffix) | trim }}"

  # 5) Persistent notification (optional)
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ use_persist_flag }}"
        sequence:
          - service: persistent_notification.create
            data:
              title: "{{ title_text }}"
              message: "{{ final_message }}"
    default: []

  # 6) Push notification via Mobile App (optional)
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ use_push_flag and (mobile_targets_list | count) > 0 }}
        sequence:
          - service: notify.notify
            data:
              title: "{{ title_text }}"
              message: "{{ final_message }}"
              target: !input mobile_targets
              data:
                channel: "{{ push_channel_raw }}"
                ttl: 0
                priority: high
                # iOS critical sound; Android still uses high priority channel
                push:
                  sound:
                    name: default
                    critical: "{{ 1 if push_critical_flag else 0 }}"
                    volume: 1.0
    default: []

  # 7) TTS announcement (optional) per selected media_player
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {{ use_tts_flag and tts_entity_id is not none and (media_players_list | count) > 0 }}
        sequence:
          - repeat:
              for_each: !input media_players
              sequence:
                - service: tts.speak
                  target:
                    entity_id: !input tts_entity
                  data:
                    media_player_entity_id: "{{ repeat.item }}"
                    cache: "{{ tts_cache_flag }}"
                    options:
                      voice: "{{ voice_name }}"
                    message: "{{ final_message }}"
    default: []

mode: parallel
max: 10
